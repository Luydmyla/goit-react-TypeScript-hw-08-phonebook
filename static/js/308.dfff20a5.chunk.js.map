{"version":3,"file":"static/js/308.dfff20a5.chunk.js","mappings":"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","sources":["components/AddContactForm/AddContactForm.styled.js","components/AddContactForm/AddContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","views/ContactsView/ContactsView.styled.js","components/ContactEditor/ContactEditor.styled.js","components/ContactEditor/ContactEditor.jsx","views/ContactsView/ContactsView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  /* align-items: center; */\n  min-width: 800px;\n  border: 4px solid blue;\n  border-radius: 10px;\n  padding: 15px;\n  margin-bottom: 20px;\n  /* text-transform: capitalize; */\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 22px;\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: space-between;\n  font-weight: bold;\n  color: blue;\n`;\n\nexport const FormInput = styled.input`\n  width: 60%;\n  margin-left: 20px;\n  height: 44px;\n  font-size: 20px;\n  color: blue;\n  border: 2px solid rgb(234, 255, 47);\n`;\n\nexport const FormButton = styled.button`\n  padding: 5px;\n  height: 44px;\n  /* border: 2px solid blue; */\n  box-shadow: 5px 5px 10px 1px #30ebfc;\n  border-radius: 10px;\n  border: none;\n  margin-top: 21px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 22px;\n  line-height: 16px;\n  transition: all 0.2s;\n  color: blue;\n  background-color: yellow;\n  cursor: pointer;\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n    box-shadow: 5px 5px 10px 1px #30ebfc;\n    color: #30ebfc;\n  }\n  &::after {\n    content: '';\n    height: 100%;\n    width: 100%;\n    border-radius: 10px;\n    top: 0;\n    left: 0;\n  }\n  &:hover::after {\n    transform: scaleX(1.4) scaleY(1.6);\n    // opacity: 0;\n  }\n  :active {\n    transform: translateY(-1px);\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n    box-shadow: 5px 5px 10px 1px #30ebfc;\n  }\n`;\n","// import './Form.styled.js';\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './AddContactForm.styled';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function AddContactForm(props) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  // console.log(name);\n  // console.log(number);\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(name, number);\n    props.onSubmit({ name, number });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Ім'я котика:\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <br />\n      <FormLabel>\n        Номер для зв'язку:\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\" number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      {/* <FormButton type=\"submit\">Add contact</FormButton> */}\n      <FormButton type=\"submit\">Додати котика</FormButton>\n    </Form>\n  );\n}\nAddContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  align-items: stretch;\n  /* width: 600px; */\n  /* width: 100%; */\n  font-size: 20px;\n  padding: 10px;\n  margin-bottom: 15px;\n  margin-top: 0;\n`;\nexport const ContactListItem = styled.li`\n  display: flex;\n  padding: 10px;\n  /* align-items: baseline; */\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Contact = styled.p`\n  /* width: 70%; */\n  display: flex;\n  justify-content: space-between;\n  margin-right: 30px;\n`;\n\nexport const ContactListName = styled.span`\n  color: darkblue;\n  display: flex;\n`;\n\nexport const ContactListNumber = styled.span`\n  color: darkcyan;\n  display: flex;\n`;\n\nexport const ContactListButton = styled.button`\n  /* display: flex;\n  align-items: center;\n  font-weight: bold;\n  font-size: 18px;\n  width: max-content;\n  /* height: 44px; */\n  /* padding: 5px; */\n  margin-left: 10px;\n  height: 44px;\n  box-shadow: 5px 5px 10px 1px #30ebfc;\n  border-radius: 10px;\n  border: none;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 22px;\n  line-height: 16px;\n  transition: all 0.2s;\n  color: blue;\n  background-color: yellow;\n  /* background-color: transparent; */\n  cursor: pointer;\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n    box-shadow: 5px 5px 10px 1px #30ebfc;\n    color: #30ebfc;\n  }\n  &::after {\n    content: '';\n    height: 100%;\n    width: 100%;\n    border-radius: 10px;\n    top: 0;\n    left: 0;\n  }\n  &:hover::after {\n    transform: scaleX(1.4) scaleY(1.6);\n    // opacity: 0;\n  }\n  :active {\n    transform: translateY(-1px);\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n    box-shadow: 5px 5px 10px 1px #30ebfc;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactList.styled.js';\nimport {\n  List,\n  ContactListItem,\n  ContactListNumber,\n  ContactListName,\n  Contact,\n  ContactListButton,\n} from './ContactList.styled';\n\n// const ContactList = ({ contacts, onDeleteContactList }) => (\nconst ContactList = ({ contacts, onDeleteContact, onEditContact }) => (\n  <List>\n    {contacts.map(({ name, number, id }) => (\n      <ContactListItem key={id}>\n        <Contact>\n          <ContactListName> Котик {name} : </ContactListName>\n          <ContactListNumber> {number} </ContactListNumber>\n        </Contact>\n        <ContactListButton type=\"button\" onClick={() => onDeleteContact(id)}>\n          Видалити\n          {/* Delete */}\n        </ContactListButton>\n        <ContactListButton\n          type=\"button\"\n          // contacts={contacts}\n          onClick={() => onEditContact({ name, number, id })}\n        >\n          Редагувати\n        </ContactListButton>\n      </ContactListItem>\n    ))}\n  </List>\n);\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  min-width: 600px;\n  font-size: 22px;\n  text-transform: initial;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-weight: bold;\n  color: blue;\n  margin-top: 20px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 50%;\n  height: 44px;\n  font-size: 14px;\n  color: blue;\n  border: 2px solid rgb(234, 255, 47);\n`;\n","import React from 'react';\nimport './Filter.styled.js';\nimport { FilterLabel, FilterInput } from './Filter.styled';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <FilterLabel>\n      Знайти котика за ім'ям:\n      {/* Find contacts by name : */}\n      <FilterInput type=\"text\" value={value} onChange={onChange} />\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import styled from 'styled-components';\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const Content = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n\n  transform: translate(-50%, -50%);\n  /* max-width: 600px; */\n  height: fit-content;\n  width: fit-content;\n  /* width: 50vw; */\n  padding: 50px;\n  background-color: #fff;\n  background: linear-gradient(lightblue, lightyellow);\n\n  border-radius: 10px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Backdrop, Content } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ children, onClose }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // console.log(e);\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  // handleKeyDown();\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <Content>{children}</Content>\n    </Backdrop>,\n    modalRoot\n  );\n}\n","import styled from 'styled-components';\n// import cats from './cats.jpg';\n\nexport const Container = styled.div`\n  width: 100%;\n  /* width: auto; */\n  /* width: 640px; */\n  height: 100%;\n  display: flex;\n\n  background: linear-gradient(lightblue, lightyellow);\n  padding: 60px;\n`;\nexport const PhonebookContainer = styled.div`\n  width: 70%;\n  /* width: 640px; */\n  height: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  font-size: 22px;\n  text-transform: uppercase;\n  color: blue;\n  /* background: linear-gradient(lightblue, lightyellow); */\n  padding: 30px;\n`;\n// export const ImgContainer = styled.div`\n//   /* width: calc(20vw - 0px); */\n//   /* min-height: 50vh; */\n//   margin-right: 30px;\n//   border-radius: 10px;\n//   /* background-size: cover; */\n//   box-shadow: 5px 5px 20px 0px #30ebfc;\n// `;\nexport const Phonebook = styled.h1`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  text-transform: uppercase;\n  font-size: 48px;\n  font-weight: 700;\n  color: blue;\n  margin-bottom: 10px;\n`;\nexport const Title = styled.h2`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  text-transform: uppercase;\n  font-size: 36px;\n  font-weight: 700;\n  color: blue;\n  margin-bottom: 10px;\n`;\n// export const ImgContainer = styled.div`\n//   min-width: 30%;\n//   min-height: 30%;\n//   margin-right: 20px;\n//   border-radius: 10px;\n//   background-size: contain;\n//   background-repeat: no-repeat;\n//   background-image: url(${cats});\n//   box-shadow: 5px 5px 20px 0px #30ebfc;\n// `;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: none;\n  font-size: 24px;\n  font-weight: 700;\n  color: blue;\n  margin-bottom: 10px;\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  /* width: fit-content; */\n  width: 600px;\n  height: fit-content;\n  border: 4px solid blue;\n  padding: 15px;\n  /* text-transform: capitalize; */\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 22px;\n  display: flex;\n  justify-content: space-between;\n  font-weight: bold;\n  color: blue;\n`;\n\nexport const FormInput = styled.input`\n  width: 70%;\n  margin-left: 20px;\n  height: 44px;\n  font-size: 22px;\n  color: blue;\n  border: 2px solid rgb(234, 255, 47);\n`;\n\nexport const FormButton = styled.button`\n  padding: 5px;\n  height: 44px;\n  box-shadow: 5px 5px 10px 1px #30ebfc;\n  border-radius: 10px;\n  border: none;\n  margin-top: 21px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 22px;\n  line-height: 16px;\n  transition: all 0.2s;\n  color: blue;\n  background-color: yellow;\n  cursor: pointer;\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n    box-shadow: 5px 5px 10px 1px #30ebfc;\n    color: #30ebfc;\n  }\n  &::after {\n    content: '';\n    height: 100%;\n    width: 100%;\n    border-radius: 10px;\n    top: 0;\n    left: 0;\n  }\n  &:hover::after {\n    transform: scaleX(1.4) scaleY(1.6);\n    // opacity: 0;\n  }\n  :active {\n    transform: translateY(-1px);\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n    box-shadow: 5px 5px 10px 1px #30ebfc;\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import { authOperations } from '../../redux/auth';\n// import { useDispatch } from 'react-redux';\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n  FormButton,\n  Title,\n} from './ContactEditor.styled';\nimport { useUpdateContactsMutation } from 'redux/itemsSlice';\nimport PropTypes from 'prop-types';\n\nexport default function ContactEditor({ onClose, data }) {\n  console.log(data);\n  const [name, setName] = useState(data.name);\n  const [number, setNumber] = useState(data.number);\n  // console.log(name);\n  // console.log(number);\n\n  const [updateContacts] = useUpdateContactsMutation();\n  // console.log(updateContact);\n  // console.log(useUpdateContactsMutation());\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(name, number);\n    const contactId = data.id;\n    console.log(contactId);\n    // if (name !== '' && number !== '') {\n    updateContacts({ name, number, contactId });\n    // resetForm();\n    // закивамо модалку\n    onClose();\n    return;\n    // }\n    // alert('Введіть імя та номер');\n  };\n  // const resetForm = () => {\n  //   setName('');\n  //   setNumber('');\n  // };\n\n  return (\n    <>\n      {/* <title>Edit Contact {name}</title> */}\n\n      <Form onSubmit={handleSubmit}>\n        <Title>Редагуємо контакт котика {data.name}</Title>\n        <FormLabel>\n          Ім'я :\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormLabel>\n        <br />\n        <FormLabel>\n          Номер для зв'язку:\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\" number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormLabel>\n        {/* <FormButton type=\"submit\">Add contact</FormButton> */}\n        <FormButton type=\"submit\">Зберегти контакт</FormButton>\n      </Form>\n    </>\n  );\n}\nContactEditor.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n};\n","import AddContactForm from '../../components/AddContactForm';\nimport ContactList from '../../components/ContactList';\nimport Spinner from '../../components/Spinner';\nimport Filter from '../../components/Filter';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import { authOperations } from 'redux/auth';\n// import { Navigate } from 'react-router-dom';\nimport cats from './cats.jpg';\nimport Modal from '../../components/Modal';\nimport {\n  Container,\n  PhonebookContainer,\n  Title,\n  Phonebook,\n  // ImgContainer,\n} from './ContactsView.styled';\nimport { useState } from 'react';\n// import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { authSelectors } from 'redux/auth';\nimport { updateFilter } from '../../redux/filterSlice';\nimport ContactEditor from '../../components/ContactEditor';\nimport {\n  useFetchContactsQuery,\n  useDeleteContactsMutation,\n  useCreateContactsMutation,\n  // useUpdateContactsMutation,\n} from 'redux/itemsSlice';\n\nexport default function ContactsView() {\n  const value = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  // const error = useSelector(authSelectors.getError);\n  // хуки з ітемс-слайсу\n  const { data, isFetching } = useFetchContactsQuery();\n  console.log(useFetchContactsQuery());\n  const [deleteContact] = useDeleteContactsMutation();\n  const [newContact] = useCreateContactsMutation();\n  // const [updateContact] = useUpdateContactsMutation();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  // функція для додавання нового контакту\n  const addContact = ({ name, number }) => {\n    const contact = {\n      name,\n      number,\n    };\n    // якщо контакт існуе - даемо nоnеpедження\n    if (data.some(contact => contact.name === name)) {\n      // return toast.info(`${contact.name}   is   already in contacts`);\n      return toast.info(`${contact.name} вже такий контакт існує`);\n    }\n    // якщо контакт новий - добавляeмо його до сnиску контактів,\n    //  викоpистовумо хук зі слайсу для відобpаження нового ствоpеного контакту\n    newContact(contact);\n  };\n  const [editedContact, setEditedContact] = useState(null);\n  // функція для збеpігання контакту для редагування\n  const editContact = ({ name, number, id }) => {\n    const contact = {\n      name,\n      number,\n      id,\n    };\n    setEditedContact(contact);\n    // відкривамо модалку\n    toggleModal();\n  };\n\n  // функція для збеpігання значення в nолі nошуку\n  const changeFilter = e => {\n    dispatch(updateFilter(e.currentTarget.value));\n  };\n\n  // функція для відобpаження отфільтpованих контактів\n  const getVisibleContacts = () => {\n    const normalizedFilter = value.toLowerCase();\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <Container>\n      {/* <ImgContainer> */}\n      <img\n        src={cats}\n        alt=\"cats\"\n        //  width=\"444\"\n        //  height=\"423\"\n        width=\"40%\"\n        height=\"40%\"\n      />\n      {/* </ImgContainer> */}\n      <PhonebookContainer>\n        <Phonebook>Phonebook</Phonebook>\n        <AddContactForm onSubmit={addContact} />\n        <ToastContainer\n          position={'top-center'}\n          autoClose={3000}\n          theme={'colored'}\n        />\n        <Title> Contacts : </Title>\n        <Filter value={value} onChange={changeFilter} />\n        {/* nід час виконання заnиту кpутиться сnінеp */}\n        {isFetching && <Spinner />}\n        {/*коли npийшли вже дані з бекенду, то pендеимо сnисок контактів */}\n        {data && (\n          <ContactList\n            contacts={getVisibleContacts()}\n            onDeleteContact={deleteContact}\n            onEditContact={editContact}\n          />\n        )}\n        {isModalOpen && (\n          <Modal onClose={toggleModal}>\n            <ContactEditor onClose={toggleModal} data={editedContact} />\n          </Modal>\n        )}\n      </PhonebookContainer>\n      {/* )} */}\n    </Container>\n  );\n}\n"],"names":["Form","styled","FormLabel","FormInput","FormButton","AddContactForm","props","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","resetForm","onSubmit","e","preventDefault","console","log","type","onChange","pattern","title","required","List","ContactListItem","Contact","ContactListName","ContactListNumber","ContactListButton","contacts","onDeleteContact","onEditContact","map","id","onClick","FilterLabel","FilterInput","Backdrop","Content","modalRoot","document","querySelector","Modal","children","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","target","Container","PhonebookContainer","Phonebook","Title","ContactEditor","data","useUpdateContactsMutation","updateContacts","contactId","ContactsView","useSelector","state","filter","dispatch","useDispatch","useFetchContactsQuery","isFetching","useDeleteContactsMutation","deleteContact","useCreateContactsMutation","newContact","isModalOpen","setIsModalOpen","toggleModal","editedContact","setEditedContact","src","cats","alt","width","height","contact","some","toast","position","autoClose","theme","updateFilter","Spinner","normalizedFilter","toLowerCase","includes","getVisibleContacts"],"sourceRoot":""}